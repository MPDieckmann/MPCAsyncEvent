{"version":3,"sources":["ts/AsyncEvent.ts","ts/AsyncEventTarget.ts","ts/index.ts","../node_modules/@mpc/mpc/src/mpc.ts","asyncevent.ts"],"names":[],"mappings":"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","file":"asyncevent.js","sourceRoot":"..\\src","sourcesContent":["import AsyncEventTarget from \"./AsyncEventTarget\";\r\n\r\nexport class AsyncEvent<type extends string | symbol = string|symbol, data = never, target extends AsyncEventTarget = AsyncEventTarget> {\r\n  constructor(type: type, eventInitDict?: AsyncEventInit<data>) {\r\n    this.#type = type;\r\n    if (typeof eventInitDict == \"object\" && eventInitDict) {\r\n      if (\"cancelable\" in eventInitDict) {\r\n        this.#cancelable = Boolean(eventInitDict.cancelable);\r\n      }\r\n      if (\"data\" in eventInitDict) {\r\n        this.data = eventInitDict.data;\r\n      }\r\n    }\r\n  }\r\n  target: target = null;\r\n  data: data = null;\r\n  #type: type;\r\n  get type() { return this.#type; }\r\n  #cancelable: boolean = true;\r\n  get cancelable() { return this.#cancelable; }\r\n  #defaultPrevented: boolean = false;\r\n  get defaultPrevented() { return this.#defaultPrevented; }\r\n  #propagationStopped: boolean = false;\r\n  get propagationStopped() { return this.#propagationStopped; }\r\n  preventDefault() {\r\n    if (this.#cancelable) {\r\n      this.#defaultPrevented = true;\r\n    }\r\n  }\r\n  stopPropagation() {\r\n    this.#propagationStopped = true;\r\n  }\r\n}\r\nObject.defineProperty(AsyncEvent.prototype, Symbol.toStringTag, {\r\n  value: \"AsyncEvent\"\r\n});\r\nexport default AsyncEvent;\r\nexport interface AsyncEventInit<data> {\r\n  cancelable: boolean;\r\n  data: data;\r\n}","import AsyncEvent from \"./AsyncEvent\";\r\n\r\nexport class AsyncEventTarget {\r\n  #listeners: TypeListenerMap = new Map();\r\n  addAsyncEventListener<type extends string | symbol>(type: type, listener: (this: this, event: AsyncEvent<type>) => void | Promise<void>, once: boolean = false): boolean {\r\n    if (!this.#listeners.has(type)) {\r\n      this.#listeners.set(type, new Map());\r\n    }\r\n    let listenerOptionsMap = this.#listeners.get(type);\r\n    if (listenerOptionsMap.has(listener)) {\r\n      return false;\r\n    }\r\n    if (listenerOptionsMap.get(listener) == Boolean(once)) {\r\n      return false;\r\n    }\r\n    listenerOptionsMap.set(listener, Boolean(once));\r\n    return true;\r\n  }\r\n  async dispatchAsyncEvent(event: AsyncEvent<string | symbol>): Promise<boolean> {\r\n    if (!this.#listeners.has(event.type)) {\r\n      return true;\r\n    }\r\n    let listenerOptionsMap = this.#listeners.get(event.type);\r\n    for (let [listener, once] of listenerOptionsMap) {\r\n      if (once) {\r\n        listenerOptionsMap.delete(listener);\r\n      }\r\n      await listener.call(this, event);\r\n      if (event.propagationStopped) {\r\n        break;\r\n      }\r\n    }\r\n    return Boolean(event.defaultPrevented);\r\n  }\r\n  removeAsyncEventListener<type extends string | symbol>(type: type, listener: (this: this, event: AsyncEvent<type>) => void | Promise<void>, once: boolean = false): boolean {\r\n    if (!this.#listeners.has(type)) {\r\n      return false;\r\n    }\r\n    let listenerOptionsMap = this.#listeners.get(type);\r\n    if (!listenerOptionsMap.has(listener)) {\r\n      return false;\r\n    }\r\n    if (listenerOptionsMap.get(listener) != Boolean(once)) {\r\n      return false;\r\n    }\r\n    listenerOptionsMap.delete(listener);\r\n    return true;\r\n  }\r\n}\r\nObject.defineProperty(AsyncEventTarget.prototype, Symbol.toStringTag, {\r\n  value: \"AsyncEventTarget\"\r\n});\r\nexport default AsyncEventTarget;\r\n\r\ninterface TypeListenerMap extends Map<string | symbol, ListenerOptionsMap> { }\r\ninterface ListenerOptionsMap extends Map<(this: AsyncEventTarget, event: AsyncEvent<string | symbol>) => void | Promise<void>, boolean> { }\r\n","export * from \"./AsyncEvent\";\r\nexport * from \"./AsyncEventTarget\";\r\n","export namespace MPC {}\r\nexport interface MPC {}\r\nexport const MPC: MPC = {\r\n  [Symbol.toStringTag]: \"MPC\"\r\n};\r\nexport default MPC;\r\n\r\ndeclare global {\r\n  const MPC: MPC;\r\n}\r\n","import { AsyncEvent, AsyncEventTarget } from \"./ts/index\";\r\nimport MPC from \"@mpc/mpc\";\r\n\r\nexport * from \"./ts/index\";\r\n\r\ntype AsyncEventConstructor = typeof AsyncEvent;\r\ntype AsyncEventTargetConstructor = typeof AsyncEventTarget;\r\n\r\ndeclare module \"@mpc/mpc\" {\r\n  interface MPC {\r\n    AsyncEvent: AsyncEventConstructor;\r\n    AsyncEventTarget: AsyncEventTargetConstructor;\r\n  }\r\n}\r\n\r\nMPC.AsyncEvent = AsyncEvent;\r\nMPC.AsyncEventTarget = AsyncEventTarget;\r\n"]}